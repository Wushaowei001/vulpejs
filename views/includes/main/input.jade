- var formName = 'mainForm';
- var itemName = 'vulpejs.item';
if page.main
  if page.main.formName
    - formName = page.main.formName;
  if page.main.itemName
    - itemName = page.main.itemName;
else 
  if page.formName
    - formName = page.formName;
  if page.itemName
    - itemName = page.itemName;

unless input.model
  - input.model = input.name;

if input.type === 'timer' && input.startTime
  - input.model = input.startTime;

- var ngModel = itemName + '.' + input.model;
if input.alias
  - ngModel = input.alias + '.' + input.model;

unless input.id
  - input.id = page.controller.toLowerCase() + '-' + input.name;

unless input.autofocus
  - input.autofocus = false;

unless input.required
  - input.required = false;

unless input.validate
  - input.validate = '';

unless input.validateWatch
  - input.validateWatch = '';

unless input.validateMessage
  - input.validateMessage = '';

if input.type !== 'show' && input.type !== 'timer'
  unless input.className
    - input.className = 'form-control';

- var append = '';
- var divAppend = '';
- var showAppend = '';
- var hideAppend = '';
- var divClass = 'form-group col-lg-12';

if input.mask
  - append += (append.length === 0 ? '' : '~') + input.mask;

if input.maskPattern
  - append += (append.length === 0 ? '' : '~') + 'ui-mask:' + input.maskPattern;

if input.autofocus
  - append += (append.length === 0 ? '' : '~') + 'autofocus';

if input.minicolors
  - append += (append.length === 0 ? '' : '~') + 'minicolors';

if input.lowerCase
  - append += (append.length === 0 ? '' : '~') + 'lowercase';

if input.upperCase
  - append += (append.length === 0 ? '' : '~') + 'uppercase';

if input.capitalize
  - append += (append.length === 0 ? '' : '~') + 'capitalize';

if input.capitalizeFirst
  - append += (append.length === 0 ? '' : '~') + 'capitalize-first';

if input.onlyNumbers
  - append += (append.length === 0 ? '' : '~') + 'only-numbers';

if input.requiredIf
  - append += (append.length === 0 ? '' : '~') + 'ng-required:' + input.requiredIf;
else if input.required
  - append += (append.length === 0 ? '' : '~') + 'required';
 
if input.rows
 - append += (append.length === 0 ? '' : '~') + 'rows:' + input.rows;

if input.showIf
  - divAppend += (divAppend.length === 0 ? '' : '~') + 'ng-if:' + input.showIf;
  - divClass += ' slide-down';

if input.hideIf
  - divAppend += (divAppend.length === 0 ? '' : '~') + 'ng-hide:' + input.hideIf;
  - divClass += ' slide-down';

if input.readonly
  - hideAppend += (append.length === 0 ? '' : '~') + 'ng-cloak';
  - hideAppend += (append.length === 0 ? '' : '~') + 'ng-hide:' + input.readonly;
  - showAppend += (append.length === 0 ? '' : '~') + 'ng-cloak';
  - showAppend += (append.length === 0 ? '' : '~') + 'ng-show:' + input.readonly;
  if input.type === 'star-rating'
    //- append += (append.length === 0 ? '' : '~') + 'ng-readonly:' + input.readonly;
  else
    - append += (append.length === 0 ? '' : '~') + 'ng-hide:' + input.readonly;

if input.validate
  - append += (append.length === 0 ? '' : '~') + 'ui-validate:' + input.validate;

if input.validateWatch
  - append += (append.length === 0 ? '' : '~') + 'ui-validate-watch:' + input.validateWatch;

if input.ngChange
  - append += (append.length === 0 ? '' : '~') + 'ng-change:' + input.ngChange;
else if input.ngOptions
  - append += (append.length === 0 ? '' : '~') + "ng-change:selectOnChange('" + input.name + "', '" + input.ngOptions.items + "', '" + input.ngOptions.value + "', '" + input.ngOptions.label + "')";

if input.ngClick
  - append += (append.length === 0 ? '' : '~') + 'ng-click:' + input.ngClick;

if input.typeahead && input.typeahead.onSelect
  if input.typeahead.onSelect.indexOf('=') !== -1
    - var typeaheadParts = input.typeahead.onSelect.split('=');
    - var typeaheadOnSelect = "typeaheadOnSelect('" + typeaheadParts[0] + "', $item, '" + typeaheadParts[1] + "')";
    - append += (append.length === 0 ? '' : '~') + 'typeahead-on-select:' + typeaheadOnSelect;
  else
    - append += (append.length === 0 ? '' : '~') + 'typeahead-on-select:' + input.typeahead.onSelect;
  
if input.toggle
  - append += (append.length === 0 ? '' : '~') + 'toggle-switch';
  - append += (append.length === 0 ? '' : '~') + 'model:'+ngModel;
  if input.toggle.on
    - append += (append.length === 0 ? '' : '~') + 'on-label:'+__(input.toggle.on);
  if input.toggle.off
    - append += (append.length === 0 ? '' : '~') + 'off-label:'+__(input.toggle.off);
  if input.toggle.knob
    - append += (append.length === 0 ? '' : '~') + 'knob-label:'+__(input.toggle.knob);
  if input.className === 'form-control'
    - input.className = '';
else
  - append += (append.length === 0 ? '' : '~') + 'ng-model:'+ngModel;
  if input.type === 'checkbox' || input.type === 'group'
    - input.className = '';

- var label = __(input.label)

if !input.maskPattern
  - append += (append.length === 0 ? '' : '~') + 'placeholder:' + label;

if input.minicolors 
  label.control-label(for=input.id)=label

- var divNgClass = "{'has-error': " + formName + "." + input.name + ".$invalid && vulpejs.submitted}";

if input.readonly
  - divNgClass = "{'has-error': " + formName + "." + input.name + ".$invalid && vulpejs.submitted, 'col-lg-3': " + input.readonly + "}";

if input.type === 'show' || input.type === 'timer'
  - divNgClass = '';
  if input.className
    - divClass = input.className;

div(class="#{divClass}" ng-class="#{divNgClass}" append=divAppend)
  unless input.minicolors
    label.control-label(for=input.id)=label
  if input.type === 'checkbox' || input.type === 'group'
    br
  if input.type === 'textarea'
    if input.readonly
      br
      span {{#{ngModel}}}
    else
      textarea(class=input.className name=input.name id=input.id append=append)
  else if input.type === 'editor'
    text-angular(name=input.name id=input.id append=append)
  else if input.type === 'image-uploader'
    div(id=input.id class=input.className)
     - var emptyImage = '{{' + ngModel + '}}';
     include ../flow-uploader/image
  else if input.type === 'file-uploader'
    div(id=input.id)
     include ../flow-uploader/file
  else if input.type === 'select'
    if input.multi
      unless input.maxHeight
        - input.maxHeight = '150px';
      br
      div(isteven-multi-select input-model=input.multi.items output-model=ngModel button-label=input.multi.label.button item-label=input.multi.label.item tick-property=input.multi.tickProperty translation="multiSelectTranslation" max-height=input.maxHeight)
    else
      select(class=input.className name=input.name id=input.id append=append)
        if input.options
          each option in input.options
            option(value=option.value)=__(option.label)
        if input.ngOptions
          unless input.ngOptions.filter
            - input.ngOptions.filter = '';
          option(ng-repeat='option in #{input.ngOptions.items}#{input.ngOptions.filter}' value="{{option.#{input.ngOptions.value}}}") {{option.#{input.ngOptions.label}}}
  else if input.type === 'group'
    each option in input.options
      - var model = "$root.group['"+input.name+option.value+"']";
      div(toggle-switch class=input.className name=input.name model=model id=input.id knob-label=__(option.knob) on-label=__('Yes') off-label=__('No') ng-click="#{input.name}Switch(#{model}, #{option.value});" append=append)
      br
  else if input.type === 'show'
    unless input.config
      br
      if input.i18n
        |{{#{ngModel}|i18n}}
      else if input.filter
        |{{#{ngModel}|#{input.filter}}}
      else
        |{{#{ngModel}}}
    if input.config
      .well
        div
          if input.config.type === 'TEMPLATE'
            div(ng-repeat="show in #{ngModel}")
              span !{input.config.template}
          else if input.config.type === 'ARRAY'
            unless input.config.separator
            div(ng-repeat="show in #{ngModel}")
              div
                each property in input.config.properties
                  - var label = __(property.label);
                  label=label
                  br
                  if property.filter
                    span {{show.#{property.value}|#{property.filter}}}
                  else
                    span {{show.#{property.value}}}
                  br
              hr
  else if input.type === 'timer'
    br
    unless input.format
      - input.format = '{{days}}d {{hhours}}h {{mminutes}}m {{sseconds}}s'
    if input.startTime
      timer(interval="1000" start-time="#{ngModel}") #{input.format}
    else
      timer(interval="1000") #{input.format}
  else if input.type === 'star-rating'
    br
    unless input.maxRating
      - input.maxRating = 5;
    unless input.onRatingSelected
      - input.onRatingSelected = '';
    unless input.readonly
      - input.readonly = 'false';
    div(star-rating max=input.maxRating readonly="#{input.readonly}" on-rating-selected=input.onRatingSelected append=append)
  else if input.type === 'range-slider'
    unless input.preventValues
      - input.preventValues = true;
    unless input.attachValues
      - input.attachValues = true;
      //attach-handle-values=input.attachValues
    unless input.step
      - input.step = 1;
    unless input.filter
      - input.filter = '';
    unless input.showValues
      - input.showValues = true;
    br
    div(range-slider show-values=input.showValues step=input.step filter=input.filter prevent-equal-min-max=input.preventValues min=input.min max=input.max model-min="#{ngModel}.min" model-max="#{ngModel}.max" append=append)
  else
    if input.group
      .input-group(append=hideAppend)
        input(type=input.type class=input.className name=input.name id=input.id append=append)
        span.input-group-addon=input.group.value
    else if input.typeahead
      input(type=input.type class=input.className name=input.name id=input.id typeahead=input.typeahead.query append=append ng-cloak ng-hide="#{input.readonly}")
    else
      input(type=input.type class=input.className name=input.name id=input.id append=append ng-cloak ng-hide="#{input.readonly}")
  if input.validateMessage 
    span(class="label label-danger" ng-cloak ng-if="#{formName}.#{input.name}.$error.validator")=__(input.validateMessage)
  if input.readonly && input.type !== 'star-rating'
    div(append=showAppend)
      if input.ngOptions
        span {{#{ngModel}.#{input.ngOptions.label}}}
      else
        span {{#{ngModel}}}
  if input.button
    unless input.button.type
      - input.button.type = 'button';
    unless input.button.className
      - input.button.className = 'btn-default';
    unless input.button.onClick
      - input.button.onClick = '';
    unless input.button.showIf
      - input.button.showIf = '';
    unless input.button.label
      - input.button.label = input.label;
    button.btn(type=input.button.type class=input.button.className ng-click=input.button.onClick ng-if=input.button.showIf)=__(input.button.label)
